#!/bin/sh /etc/rc.common

START=10
USE_PROCD=1

wan_config(){
    # Validate
    if [ -z "$1" ]; then
        echo "No input value "
        exit 1
    fi

    # Config network
    ifname=$1
    #[ $(uci get network.wan.ifname 2>/dev/null) != $ifname ] && return

    case $ifname in

    wwan0)	
	
		MAC_ADDR=$(uci get network.@device[0].macaddr 2>/dev/null)
		if [ ! -z "$MAC_ADDR" ]; then 
			uci delete network.@device[0].macaddr
			DEV0=$(uci get network.@device[0] 2>/dev/null)
			if [ ! -z "$DEV0" ]; then 
				uci delete network.@device[0]
			fi	
			# Add config device
			uci add network device
			uci set network.@device[0].name='br-lan'
			uci set network.@device[0].type='bridge'
			DEV_PORTS=$(uci get network.@device[0].ports 2>/dev/null)
			if [ -z "$DEV_PORTS" ]; then 
				uci add_list network.@device[0].ports='eth0'
			fi
		fi
		
		LO_IFNAME=$(uci get network.loopback.ifname 2>/dev/null)
		if [ ! -z "$LO_IFNAME" ]; then 
			uci rename network.loopback.ifname=device
		fi
			
		# Remove option type 'bridge'  
        # Remove option ifname 'eth0'   
		
		LAN_TYPE=$(uci get network.lan.type 2>/dev/null)
		if [ ! -z "$LAN_TYPE" ]; then 
			uci delete network.lan.type
		fi
		
		LAN_IFNAME=$(uci get network.lan.ifname 2>/dev/null)
		if [ ! -z "$LAN_IFNAME" ]; then 
			uci delete network.lan.ifname
		fi
		
		
		# Add network.lan.device='br-lan'
		LAN_DEV=$(uci get network.lan.device 2>/dev/null)
		if [ -z "$LAN_DEV" ]; then 
			uci set network.lan.device='br-lan'
		fi
		
		# Config network
        uci set network.wan=interface
        uci set network.wan.ifname=$ifname
        uci set network.wan.proto='qmi'
        uci set network.wan.device='/dev/cdc-wdm0'
#        uci set network.wan.apn='m-wap'
#        uci set network.wan.modes='all'
        uci set network.wan.autoconnect='1'
#        uci set network.wan.auth='none'
#        uci set network.wan.pdptype='ipv4'

		#default LAN mode
		AUTO_MODE=$(uci get network.wan.auto 2>/dev/null)
		if [ -z "$AUTO_MODE" ]; then 
			uci set network.wan.auto='1'   
		fi  
        uci commit network
        ;;
        
    eth1|usb0)
        # Setting network
		# Add network.@device[0]=device
		# add network.@device[0].name='br-lan'
		# add network.@device[0].type='bridge'
		# add list network.@device[0].ports='eth0'
		MAC_ADDR=$(uci get network.@device[0].macaddr 2>/dev/null)
		if [ ! -z "$MAC_ADDR" ]; then 
			uci delete network.@device[0].macaddr
			DEV0=$(uci get network.@device[0] 2>/dev/null)
			if [ ! -z "$DEV0" ]; then 
				uci delete network.@device[0]
			fi	
			# Add config device
			uci add network device
			uci set network.@device[0].name='br-lan'
			uci set network.@device[0].type='bridge'
			DEV_PORTS=$(uci get network.@device[0].ports 2>/dev/null)
			if [ -z "$DEV_PORTS" ]; then 
				uci add_list network.@device[0].ports='eth0'
			fi
		fi
		
		LO_IFNAME=$(uci get network.loopback.ifname 2>/dev/null)
		if [ ! -z "$LO_IFNAME" ]; then 
			uci rename network.loopback.ifname=device
		fi
			
		# Remove option type 'bridge'  
        # Remove option ifname 'eth0'   
		
		LAN_TYPE=$(uci get network.lan.type 2>/dev/null)
		if [ ! -z "$LAN_TYPE" ]; then 
			uci delete network.lan.type
		fi
		
		LAN_IFNAME=$(uci get network.lan.ifname 2>/dev/null)
		if [ ! -z "$LAN_IFNAME" ]; then 
			uci delete network.lan.ifname
		fi
		
		
		# Add network.lan.device='br-lan'
		LAN_DEV=$(uci get network.lan.device 2>/dev/null)
		if [ -z "$LAN_DEV" ]; then 
			uci set network.lan.device='br-lan'
		fi
		
		uci set network.wan=interface
		# Migrate from fname -> device to comply with luci
		WAN_IFNAME=$(uci get network.wan.ifname 2>/dev/null)
		if [ ! -z "$WAN_IFNAME" ]; then 
			uci rename network.wan.ifname=device
		else 
			uci set network.wan.device=$ifname	
		fi 
		uci set network.wan.proto='dhcp'
		#default LAN mode
		AUTO_MODE=$(uci get network.wan.auto 2>/dev/null)
		if [ -z "$AUTO_MODE" ]; then 
			uci set network.wan.auto='1'   
		fi  
		
		#IPV6 support
		#uci set network.wan6=interface
        #uci set network.wan6.device=$ifname
        #uci set network.wan6.proto='dhcpv6'
		
		uci commit network
        ;;
		
    *)
        echo "Invalid config mode"
        ;;

    esac
}

start_service() {
    ifname='wwan0'
    [ -L /sys/class/net/$ifname ] && wan_config wwan0 && return

    ifname='eth1'
    [ -L /sys/class/net/$ifname ] && wan_config eth1 && return
	
	ifname='usb0'
    [ -L /sys/class/net/$ifname ] && wan_config usb0 && return
}
