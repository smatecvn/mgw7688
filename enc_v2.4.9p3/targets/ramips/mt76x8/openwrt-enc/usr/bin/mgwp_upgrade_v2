#!/bin/sh

# Syntax:
# mgwp_upgrade -p python-mgw ---> Upgrade package python-mgw
# mgwp_upgrade -i -n --> Upgrade image, do not keep setting
# mgwp_upgrade -i --> Upgrade image, keep setting

# Validate
if [ -z "$1" ]; then 
  echo "Usage:"
  echo "    ${0} -h                 Display help"
  echo "    ${0} -p                 Upgrade package python-mgw"
  echo "    ${0} -i -n              Upgrade image, do not keep setting"
  echo "    ${0} -i                 Upgrade image, keep setting, default version"
  echo "    ${0} -i -v [ARG]        Upgrade image, keep setting with specific firmware version"
  echo "    ${0} -i -n  -t          Upgrade image, do not keep setting, testing branch"
  echo "    ${0} -i  -t             Upgrade image, keep setting, testing branch"
  exit 0
fi

UPGRADE_MODE='Package'
PKG_NAME='python3-mgw'
KEEP_SETTING_MODE='Yes'

#REPO_URL='http://repo.smatec.com.vn/mgw7688'
REPO_URL='https://github.com/smatecvn/mgw7688/raw/main'

while getopts ":iptnhv:" opt; do
  case ${opt} in
    # Help    
    h )
      echo "Usage:"
      echo "    ${0} -h                 Display help"
      echo "    ${0} -p                 Upgrade package python-mgw"
      echo "    ${0} -i -n              Upgrade image, do not keep setting"
      echo "    ${0} -i                 Upgrade image, keep setting, default version"
      echo "    ${0} -i -v [ARG]        Upgrade image, keep setting with specific firmware version"
      echo "    ${0} -i -n  -t          Upgrade image, do not keep setting, testing branch"
      echo "    ${0} -i  -t             Upgrade image, keep setting, testing branch"
      exit 0
      ;;

    # Upgrade package -- scan for 2nd pkg if needed
    p )
      UPGRADE_MODE='Package'
      ;;

    i )
      UPGRADE_MODE='Image'
      ;;

    t )
      # Testing branch
      REPO_URL='http://repo.smatec.com.vn/openwrt/master'
      ;;

    n )
      KEEP_SETTING_MODE='No'
      ;;
	  
	v )
	  #Firmware Version 	
	  FWV="$OPTARG" 
	  REPO_URL=$REPO_URL/$FWV	  
	  #echo $REPO_URL	  
	  ;;
	  
    # Invalid option
   \? )
     echo "Invalid Option: -$OPTARG" 1>&2
     exit 1
     ;;
  esac
done

# Process order
if [ $UPGRADE_MODE = 'Package' ]; then
  # Upgrade pkg index
  opkg update
  
  # Checking if there is a python-mgw pkg can be upgrade
  if [ -z "`opkg list-upgradable | grep ${PKG_NAME}`" ]; 
  then
    echo "There is no new ${PKG_NAME} available "
  else
    echo "New ${PKG_NAME}package is available: " `opkg list-upgradable | grep ${PKG_NAME}`

    # Kill mgwp running process and upgrade python-mgw pkg
    killall python
    opkg upgrade ${PKG_NAME}
  fi

  exit 0
fi

# Process img download
if [ $UPGRADE_MODE = 'Image' ]; then

  IMG_URL="${REPO_URL}/targets/ramips/mt76x8/openwrt-ramips-mt76x8-mediatek_linkit-smart-7688-squashfs-sysupgrade.bin"
  SHA256_URL="${REPO_URL}/targets/ramips/mt76x8/sha256sums"

  # Download to /tmp
  cd /tmp

  rm -fr openwrt-ramips-mt76x8-mediatek_linkit-smart-7688-squashfs-sysupgrade.bin
  rm -fr sha256sums

  #wget $IMG_URL
  #wget $SHA256_URL
  
  aria2c $IMG_URL
  aria2c $SHA256_URL

  # Validate checksum
  if [ `sha256sum -c sha256sums 2>/dev/null | grep sysupgrade.bin | awk '{print $2}'` != 'OK' ]; then
    echo "Firmware Checksum Wrong ! Exit now. "
    exit  
  fi 

  # Upgrade
  if [ $KEEP_SETTING_MODE = 'Yes' ]; then    
    sysupgrade -v *squashfs-sysupgrade.bin
  else   
    sysupgrade -n -v *squashfs-sysupgrade.bin
  fi

  exit 0
fi